import streamlit as st

def configurar_pantalla2(mostrar_pantalla1):
    """
    Configura los elementos y campos de la Pantalla 2.
    Genera un prompt basado en los datos ingresados en Pantalla 1 y permite su edici√≥n.
    Tambi√©n incluye recomendaciones de herramientas y un enlace para traducci√≥n.
    """
    if "params" not in st.session_state or not st.session_state.params:
        st.warning("No se han proporcionado datos desde Pantalla 1. Por favor, complet√° los campos obligatorios.")
        # Bot√≥n para generar un nuevo prompt
if st.button("Generar un nuevo prompt"):
    mostrar_pantalla1()

# Mensaje final
st.markdown("---")
st.markdown(
    """
    Trabajo final de un curso de IA. Para cualquier feedback o consulta, escrib√≠ a [julietafantini@gmail.com](mailto:julietafantini@gmail.com).
    """
)
            mostrar_pantalla1()
        return

    params = st.session_state.params

    # Generaci√≥n del prompt
    def generar_prompt(params):
        """
        Genera un texto (prompt) a partir de los par√°metros proporcionados.
        Estructurado en cuatro frases seg√∫n lo definido.
        """
        frases = []

        # Primera Frase
        if params.get("idea_inicial"):
            frases.append(f"Imagina {params['idea_inicial']}.")

        # Segunda Frase
        tipo_imagen = params.get("tipo_de_imagen_personalizado", params["tipo_de_imagen"]) if "Otro" in params["tipo_de_imagen"] else params["tipo_de_imagen"]
        estilo = params.get("estilo_art√≠stico_personalizado", params["estilo_art√≠stico"]) if "Otro" in params["estilo_art√≠stico"] else params["estilo_art√≠stico"]
        frases.append(f"Esta imagen es un {tipo_imagen.lower()} con un estilo {estilo.lower()}.")

        # Tercera Frase
        if params.get("proposito_categoria"):
            if params.get("proposito_categoria") == "Otro":
                proposito = params.get("proposito_personalizado", "un prop√≥sito no definido").lower()
                frases.append(f"Fue creada para {proposito}.")
            else:
                subcat = f", espec√≠ficamente {params['proposito_subcategoria'].lower()}" if params.get("proposito_subcategoria") else ""
                frases.append(f"Fue creada para {params['proposito_categoria'].lower()}{subcat}.")

        # Cuarta Frase
        aspectos = []
        if params.get("iluminaci√≥n"):
            aspectos.append(f"iluminaci√≥n {params['iluminaci√≥n'].lower()}")
        if params.get("plano"):
            aspectos.append(f"plano {params['plano'].lower()}")
        if params.get("composici√≥n"):
            aspectos.append(f"composici√≥n {params['composici√≥n'].lower()}")
        if params.get("resoluci√≥n"):
            aspectos.append(f"resoluci√≥n {params['resoluci√≥n'].lower()}")
        if params.get("acabado"):
            aspectos.append(f"acabado {params['acabado'].lower()}")

        if aspectos:
            frases.append(f"Incluye detalles como {', '.join(aspectos)}.")

        return " ".join(frases)

    prompt_generado = generar_prompt(params)

    # Pantalla principal
    st.title("Tu prompt est√° listo")

    # √Årea de Edici√≥n
    st.markdown("## Revis√° y edit√° tu prompt")
    prompt_editado = st.text_area(
        "Pod√©s ajustar el prompt generado:",
        value=prompt_generado,
        height=200
    )
    st.caption("Los cambios se guardan autom√°ticamente al hacer clic fuera del cuadro.")

    # √Årea de Copiado
    st.markdown("---")
    st.markdown("## üìã COPI√Å TU PROMPT")
    st.info("### ‚¨ÜÔ∏è CLICK EN EL √çCONO DE COPIAR ‚¨ÜÔ∏è\nMir√° la esquina superior derecha del recuadro gris üëâ")
    st.code(prompt_editado, language="")
    st.success("‚úÖ Cuando copies el texto, ver√°s una confirmaci√≥n aqu√≠")
    st.markdown("---")

    # Herramientas Recomendadas
    st.markdown("## Herramientas Recomendadas")
    st.markdown(
        """
        - **[DALL¬∑E](https://openai.com/dall-e/)**: Herramienta de OpenAI para dibujar im√°genes con inteligencia artificial.
          Permite creaciones art√≠sticas y composiciones realistas, basada en modelos GPT.
        - **[MidJourney](https://www.midjourney.com/)**: Reconocida por su calidad art√≠stica y est√©tica muy cuidada en las im√°genes generadas.
        - **[Stable Diffusion](https://stability.ai/)**: Ideal para personalizaci√≥n y modificaciones detalladas de tu prompt.
        - **[Grok de Twitter](https://twitter.com/)**: Conect√° tus im√°genes con las tendencias m√°s actuales en redes sociales.
        - **[Claude](https://www.anthropic.com/)**: Ideal para analizar y mejorar prompts complejos, integr√°ndose con chatbots IA.
        - **[Copilot](https://copilot.github.com/)**: Soporte creativo para generaci√≥n r√°pida y vers√°til de contenido y prompts.
        """
    )

    # Traducci√≥n
    st.markdown("## ¬øNecesit√°s el prompt en ingl√©s?")
    st.markdown(
        """
        Muchas herramientas funcionan mejor con prompts en ingl√©s. Si es tu caso, us√° la traducci√≥n.

        1. Hac√© clic en "Abrir Google Translate".
        2. El texto se cargar√° autom√°ticamente.
        3. Copi√° la traducci√≥n.
        """
    )
    google_translate_url = f"https://translate.google.com/?sl=es&tl=en&text={prompt_editado.replace(' ', '%20')}"
    if st.button("Abrir Google Translate"):
        st.markdown(f"[Abrir Google Translate ‚Üí]({google_translate_url})", unsafe_allow_html=True)

    # Instrucciones de Uso
    st.markdown("## C√≥mo usar tu prompt:")
    st.markdown(
        """
        1. Copi√° el texto usando el √≠cono de arriba.
        2. Abr√≠ la herramienta que prefieras en otra pesta√±a.
        3. Peg√° el prompt donde dice "Describe la imagen...".
        4. ¬°Gener√° tu imagen! Si utiliz√°s el traductor, asegurate de pegar el texto traducido.
        """
    )

    
    st.markdown(
        """
        Trabajo final de un curso de IA. Para cualquier feedback o consulta, escrib√≠ a [julietafantini@gmail.com](mailto:julietafantini@gmail.com).
        """
    )

    # Bot√≥n para generar un nuevo prompt
    if st.button("Generar un nuevo prompt"):
        mostrar_pantalla1()

if __name__ == "__main__":
    configurar_pantalla2(lambda: print("Pantalla 1 cargada."))
