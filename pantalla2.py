import streamlit as st

def configurar_pantalla2(mostrar_pantalla1):
    """
    Configura los elementos y campos de la Pantalla 2.
    Genera un prompt basado en los datos ingresados en Pantalla 1 y permite su edici√≥n.
    Tambi√©n incluye recomendaciones de herramientas y un enlace para traducci√≥n.
    """
    # Chequeo de datos previos
    if "params" not in st.session_state or not st.session_state.params:
        st.warning("No se han proporcionado datos desde Pantalla 1. Por favor, complet√° los campos obligatorios.")
        if st.button("Generar un nuevo prompt"):
            mostrar_pantalla1()
        return

    params = st.session_state.params

    # Funci√≥n local para generar el prompt
    def generar_prompt(params):
        """
        Genera un texto (prompt) a partir de los par√°metros proporcionados.
        Estructurado en cuatro frases seg√∫n lo definido.
        """
        frases = []

        # 1) Idea inicial
        if params.get("idea_inicial"):
            frases.append(f"Imagin√° {params['idea_inicial']}.")

        # 2) Tipo + Estilo
        if "Otro" in params["tipo_de_imagen"]:
            tipo_imagen = params.get("tipo_de_imagen_personalizado", "un tipo no definido").lower()
        else:
            tipo_imagen = params["tipo_de_imagen"].lower()

        if "Otro" in params["estilo_art√≠stico"]:
            estilo = params.get("estilo_art√≠stico_personalizado", "un estilo no definido").lower()
        else:
            estilo = params["estilo_art√≠stico"].lower()

        frases.append(f"Esta imagen es un {tipo_imagen} con un estilo {estilo}.")

        # 3) Prop√≥sito
        if params.get("proposito_categoria"):
            if "Otro" in params["proposito_categoria"]:
                proposito = params.get("proposito_personalizado", "un prop√≥sito no definido").lower()
                frases.append(f"Fue creada para {proposito}.")
            else:
                subcat = (
                    f", espec√≠ficamente {params['proposito_subcategoria'].lower()}" 
                    if params.get("proposito_subcategoria") else ""
                )
                frases.append(f"Fue creada para {params['proposito_categoria'].lower()}{subcat}.")

        # 4) Caracter√≠sticas t√©cnicas
        aspectos = []
        if params.get("iluminaci√≥n"):
            aspectos.append(f"iluminaci√≥n {params['iluminaci√≥n'].lower()}")
        if params.get("plano"):
            aspectos.append(f"plano {params['plano'].lower()}")
        if params.get("composici√≥n"):
            aspectos.append(f"composici√≥n {params['composici√≥n'].lower()}")
        if params.get("resoluci√≥n"):
            aspectos.append(f"resoluci√≥n {params['resoluci√≥n'].lower()}")
        if params.get("acabado"):
            aspectos.append(f"acabado {params['acabado'].lower()}")

        if aspectos:
            frases.append(f"Incluye detalles como {', '.join(aspectos)}.")

        return " ".join(frases)

    # Generar prompt
    prompt_generado = generar_prompt(params)

    # Layout de Pantalla 2
    st.title("Tu prompt est√° listo")

    # √Årea de Edici√≥n
    st.markdown("## Revis√° y edit√° tus instrucciones")
    prompt_editado = st.text_area(
        "Pod√©s ajustar el prompt generado:",
        value=prompt_generado,
        height=200
    )
    st.caption("Los cambios se guardan autom√°ticamente al hacer clic fuera del cuadro.")

    # √Årea de Copiado
    st.markdown("---")
    st.markdown("## üìã COPI√Å TU PROMPT")
    st.code(prompt_editado, language="")
    st.info("### ‚¨ÜÔ∏è CLICK EN EL √çCONO DE COPIAR ‚¨ÜÔ∏è\nMir√° la esquina superior derecha del recuadro gris.")
    st.markdown("---")

    # Herramientas Recomendadas
    st.markdown("## Herramientas Recomendadas")
    st.markdown(
        """
        - **[DALL¬∑E](https://openai.com/dall-e/)**: Creaciones art√≠sticas y composiciones realistas basadas en IA de OpenAI.  
        - **[MidJourney](https://www.midjourney.com/)**: Reconocida por la alta calidad est√©tica y detalles art√≠sticos.  
        - **[Stable Diffusion](https://stability.ai/)**: Ideal para personalizaci√≥n y modificaciones detalladas de tu prompt, con gran comunidad open-source.  
        - **[Grok de Twitter](https://twitter.com/)**: Conect√° tus im√°genes con las tendencias actuales en redes sociales (opcional).  
        - **[Claude](https://www.anthropic.com/)**: Para mejorar prompts complejos e integrarlos con chatbots IA.  
        - **[Copilot](https://copilot.github.com/)**: Soporte creativo para generaci√≥n r√°pida de contenido y prompts.
        """
    )

    # Traducci√≥n
    st.markdown("## ¬øNecesit√°s el prompt en ingl√©s?")
    st.markdown(
        """
        Muchas herramientas funcionan mejor con prompts en ingl√©s. Si es tu caso, us√° la traducci√≥n:
        1. Hac√© clic en "Abrir Google Translate".
        2. El texto se cargar√° autom√°ticamente.
        3. Copi√° la traducci√≥n.
        """
    )
    # Codificar el prompt para URL (nativo de Python, sin librer√≠as extra).
    text_encoded = prompt_editado.replace(" ", "%20")
    google_translate_url = f"https://translate.google.com/?sl=es&tl=en&text={text_encoded}"
    if st.button("Abrir Google Translate"):
        st.markdown(f"[Abrir Google Translate ‚Üí]({google_translate_url})", unsafe_allow_html=True)

    # Instrucciones de Uso
    st.markdown("## C√≥mo usar tu prompt:")
    st.markdown(
        """
        1. Copi√° el texto usando el √≠cono de arriba.
        2. Abr√≠ la herramienta que prefieras en otra pesta√±a.
        3. Peg√° el prompt donde dice "Describe la imagen...".
        4. ¬°Gener√° tu imagen! (Si traduc√≠s, peg√° el texto en ingl√©s).
        """
    )

    # Bot√≥n para generar un nuevo prompt
    if st.button("Generar un nuevo prompt"):
        mostrar_pantalla1()

    st.markdown("---")
    st.markdown(
        """
        Trabajo final de un curso de IA. 
        Para cualquier feedback o consulta, escrib√≠ a [julietafantini@gmail.com](mailto:julietafantini@gmail.com).
        """
    )


if __name__ == "__main__":
    # Ejecuci√≥n directa de pantalla2 (solo para pruebas)
    configurar_pantalla2(lambda: print("Pantalla 1 cargada."))
